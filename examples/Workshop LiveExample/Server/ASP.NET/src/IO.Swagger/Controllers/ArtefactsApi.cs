/*
 * Webtechnologien - Workshop
 *
 * Beispiel für den Workshop über Swagger und OpenAPI im Modul Webtechnologien
 *
 * OpenAPI spec version: 1.0.0
 * Contact: patrick.albus@smail.th-koeln.de
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ArtefactsApiController : ControllerBase
    { 
        /// <summary>
        /// Example for POST request
        /// </summary>
        /// <param name="body">Data of new artefact</param>
        /// <response code="201">Added artefact</response>
        /// <response code="400">Invalid artefact data in request body</response>
        /// <response code="500">Internal server error</response>
        [HttpPost]
        [Route("/api/artefacts")]
        [ValidateModelState]
        [SwaggerOperation("AddArtefact")]
        [SwaggerResponse(statusCode: 201, type: typeof(ArtefactDTO), description: "Added artefact")]
        [SwaggerResponse(statusCode: 400, type: typeof(string), description: "Invalid artefact data in request body")]
        [SwaggerResponse(statusCode: 500, type: typeof(ErrorResponse), description: "Internal server error")]
        public virtual IActionResult AddArtefact([FromBody]ArtefactDTO body)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(ArtefactDTO));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(string));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"objectId\" : \"objectId\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<ArtefactDTO>(exampleJson)
                        : default(ArtefactDTO);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Example for GET request with path paramenter.
        /// </summary>
        /// <remarks>This API returns an artefact.</remarks>
        /// <param name="objectId"></param>
        /// <response code="200">Artefact</response>
        /// <response code="500">Internal server error</response>
        [HttpGet]
        [Route("/api/artefacts/{objectId}")]
        [ValidateModelState]
        [SwaggerOperation("GetArtefactByObjectId")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ArtefactDTO>), description: "Artefact")]
        [SwaggerResponse(statusCode: 500, type: typeof(ErrorResponse), description: "Internal server error")]
        public virtual IActionResult GetArtefactByObjectId([FromRoute][Required]int? objectId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ArtefactDTO>));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "[ {\n  \"objectId\" : \"objectId\"\n}, {\n  \"objectId\" : \"objectId\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<ArtefactDTO>>(exampleJson)
                        : default(List<ArtefactDTO>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Example for GET request without parameters
        /// </summary>
        /// <remarks>This API returns a list of artefacts.</remarks>
        /// <response code="200">List of artefacts</response>
        /// <response code="500">Internal server error</response>
        [HttpGet]
        [Route("/api/artefacts")]
        [ValidateModelState]
        [SwaggerOperation("GetArtefacts")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ArtefactDTO>), description: "List of artefacts")]
        [SwaggerResponse(statusCode: 500, type: typeof(ErrorResponse), description: "Internal server error")]
        public virtual IActionResult GetArtefacts()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ArtefactDTO>));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(ErrorResponse));
            string exampleJson = null;
            exampleJson = "[ {\n  \"objectId\" : \"objectId\"\n}, {\n  \"objectId\" : \"objectId\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<ArtefactDTO>>(exampleJson)
                        : default(List<ArtefactDTO>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
